<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.techmask.ressack.resourcemanager.repository.ResourceRepository">
   <cache type="org.mybatis.caches.redis.RedisCache" />
   
   <resultMap id="ResourceResultMap" type="com.techmask.ressack.resourcemanager.domain.Resource">
        <id column="resource_id" property="id" />
        <result column="description" property="desc" />
        <result column="orig_url" property="origUrl" />
        <result column="download_url" property="downloadUrl" />
        <result column="download_password" property="downloadPassword" />
        <result column="payment_type" property="paymentType" />
        <result column="payment_amount" property="paymentAmount" />
        <result column="owner_id" property="ownerId" />
        <result column="owner_name" property="ownerName" />
        <result column="owner_avatar_url" property="ownerAvatarUrl" />
        <result column="image_ind" property="imageInd" />
        <result column="image_version" property="imageVersion" />
        <result column="sub_category" property="subCategory" />
        <result column="view_count" property="viewCount" />
        <result column="like_count" property="likeCount" />
        <result column="bookmark_count" property="bookmarkCount" />
        <result column="download_count" property="downloadCount" />
        <result column="comment_count" property="commentCount" />
        <result column="view_count" property="viewCount" />
        <result column="rating_count" property="ratingCount" />
        <result column="created_date" property="createdDate" />
        <result column="updated_date" property="updatedDate" />
        <result column="created_by" property="createdBy" />
        <result column="updated_by" property="updatedBy" />
    </resultMap>
    
    <select id="loadResource" resultMap="ResourceResultMap">
        select r.*,u.user_name from resource r,user u where r.owner_id=u.user_id
    </select>

	<select id="getNewCreatedCount" parameterType="map" resultType="int">
        <![CDATA[
        SELECT count(*) from resource where created_date>curdate() and owner_id=#{userId}
        ]]>
    </select>
	
	<select id="getSameOrigUrlCount" parameterType="map" resultType="int">
        SELECT count(*) from resource where orig_url=#{origUrl}
    </select>
	
	<select id="getLastInsertId" resultType="long">
        SELECT LAST_INSERT_ID()
    </select>
	
	<select id="loadAllResource" parameterType="map" resultMap="ResourceResultMap">
        select r.*,s.view_count,s.like_count,s.bookmark_count,s.rating_count,s.view_count,s.rating,
        s.download_count,s.comment_count,u.user_name owner_name,u.head_img_url owner_avatar_url 
        from resource r,user u,statistics s where r.status='VALID'
    	 <if test="category != null">
    	 	and (category=#{category} or 'ALL'=#{category})
    	 </if>
    	 <if test="subCategory != null">
    	 	and (sub_category=#{subCategory} or 'ALL'=#{subCategory})
    	 </if>
    	 <if test="keywords!= null">
    	 	and ('ALL'=#{keywords} or r.title like CONCAT('%',#{keywords},'%') or r.tags like CONCAT('%',#{keywords},'%') )
    	 </if>
    	 <if test="flagType!= null">
    	 	and exists( select 1 from flag where owner_id=#{ownerId} and flag_type=#{flagType} and ref_id=r.resource_id)
    	 </if>
    	 <if test="resourceOwnerId!= null">
            and r.owner_id=#{resourceOwnerId}
       	 </if>
       	 <if test="resourceType!= null">
            and r.type=#{resourceType}
       	 </if>
       	 <choose>
       	 	<when test="resourceInd eq 'DOWNLOAD'.toString()">
       	 		and r.download_url is not null	
       	 	</when>
       	 	<when test="resourceInd eq 'RECOMMEND'.toString()">
       	 		and r.download_url is null	
       	 	</when>
       	 </choose>
       	 <choose>
       	 	<when test="periodInd eq 'WEEK'.toString()">
       	 		and r.created_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)
       	 	</when>
       	 	<when test="periodInd eq 'MONTH'.toString()">
       	 		and r.created_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH)
       	 	</when>
       	 </choose>
       	
    	 and r.resource_id=s.ref_id and r.owner_id=u.user_id 
    	 order by weight desc, 
       	 <choose>
       	 	<when test="orderInd eq 'LATEST'.toString()">
       	 		r.created_date desc	
       	 	</when>
       	 	<when test="orderInd eq 'DOWNLOAD'.toString()">
       	 		s.download_count desc	
       	 	</when>
       	 	<when test="orderInd eq 'RATING'.toString()">
       	 		s.rating desc	
       	 	</when>
       	 	<when test="orderInd eq 'POPULAR'.toString()">
       	 		(s.like_count+s.bookmark_count+s.comment_count) desc	
       	 	</when>
       	 	<otherwise>
                r.created_date desc
            </otherwise>
       	 </choose>
    	 limit #{_startRowIndex}, #{_pageSize}
    </select>
    
    <select id="loadAllResourceForRssFeed" parameterType="map" resultMap="ResourceResultMap">
    	 select r.*,u.user_name owner_name from resource r,user u   
    	 where  r.status='VALID' and r.owner_id=u.user_id    	 
    	 <if test="category != null">
    	 	and (category=#{category} or 'ALL'=#{category})
    	 </if>
    	 <if test="subCategory != null">
    	 	and (sub_category=#{subCategory} or 'ALL'=#{subCategory})
    	 </if>    	 
    	 order by r.created_date desc
    	 limit 20
    </select>
    
	<insert id="addResource" parameterType="map">
        insert into resource(
           type,title,description,category,sub_category,tags,status,orig_url,
           download_url,download_password,download_times,payment_type,payment_amount,owner_id,created_by,updated_by)
           values(#{type},#{title},#{desc},#{category},#{subCategory},#{tags},'VALID',#{origUrl},
           #{downloadUrl},#{downloadPassword},0,'NA',null,#{userId},#{userName},#{userName})
    </insert>
    
    <update id="updateResource" parameterType="map">
        update resource
          set 
          title=#{title},
          description = #{desc},
          category = #{category},
          sub_category = #{subCategory},
          tags = #{tags},
          orig_url = #{origUrl},
          download_url = #{downloadUrl},
          download_password = #{downloadPassword},
          updated_date=now()
		  where (owner_id = #{userId} || 'ADMIN'=#{userRole}) and resource_id= #{id}
    </update>

    
    <select id="loadResourceById" parameterType="string" resultMap="ResourceResultMap">   
        select r.*,s.view_count,s.like_count,s.bookmark_count,s.rating_count,s.rating,
        s.download_count,s.comment_count,u.user_name owner_name,u.head_img_url owner_avatar_url 
        from resource r,user u,statistics s 
        where r.status='VALID'
         and r.resource_id=s.ref_id and r.owner_id=u.user_id and resource_id=#{resourceId}
    </select>

	<update id="setImageInd" parameterType="string">
        update resource set image_ind='Y',image_version=image_version+1 where resource_id=#{resourceId}
    </update>

   	<update id="flushCache" >
        update resource set updated_date=now() where 1=2
    </update> 
    
</mapper> 